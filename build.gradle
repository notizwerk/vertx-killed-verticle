plugins {
  id 'java'
  id 'application'
  id 'com.github.johnrengelman.shadow' version '1.2.3'
  id 'maven-publish'
}

repositories {
    jcenter()
    mavenCentral()
}

mainClassName = 'io.vertx.core.Launcher'
def mainVerticleName = 'de.notizwerk.AppStarter'

group = "de.notizwerk"
version = "1.0"

shadowJar {
  classifier = 'fat'
  manifest {
      attributes "Main-Verticle": mainVerticleName
  }
  mergeServiceFiles {
    include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
  }
}


sourceCompatibility = '1.8'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

// NetBeans will automatically add "run" and "debug" tasks relying on the
// "mainClass" property. You may however define the property prior executing
// tasks by passing a "-PmainClass=<QUALIFIED_CLASS_NAME>" argument.
//
// Note however, that you may define your own "run" and "debug" task if you
// prefer. In this case NetBeans will not add these tasks but you may rely on
// your own implementation.
if (!hasProperty('mainClass')) {
    ext.mainClass = ''
}



def vertx3version = "3.2.1"

dependencies {

    testCompile group: 'junit', name: 'junit', version: '4.10'
    compile "io.vertx:vertx-core:$vertx3version"
    compile "io.vertx:vertx-web:$vertx3version"
    compile "io.vertx:vertx-unit:$vertx3version"
    compile "io.vertx:vertx-hazelcast:$vertx3version"
    compile "io.vertx:vertx-service-factory:$vertx3version"
    compile "io.vertx:vertx-maven-service-factory:$vertx3version"
    
    testCompile "io.vertx:vertx-unit:$vertx3version"
}

task resolveSources << {
    def componentIds = configurations.compile.incoming.resolutionResult.allDependencies.collect { it.selected.id }

    def result = dependencies.createArtifactResolutionQuery()
    .forComponents(componentIds)
    .withArtifacts(JvmLibrary, SourcesArtifact, JavadocArtifact)
    .execute()

    for (component in result.resolvedComponents) {
        component.getArtifacts(SourcesArtifact).each { println "Source artifact for ${component.id}: ${it.file}" }
    }
}


task wrapper(type: Wrapper) {
    gradleVersion = '2.12'
}

task sourceJar(type: Jar) {
  from sourceSets.main.allJava
  classifier "sources"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
             from components.java
             artifact sourceJar
        }
    }
}
